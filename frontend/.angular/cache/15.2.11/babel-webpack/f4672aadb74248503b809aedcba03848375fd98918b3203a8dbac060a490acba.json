{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/dance.service\";\nimport * as i3 from \"@angular/router\";\nexport class CategoryUpdateComponent {\n  constructor(fb, danceService, route, router) {\n    this.fb = fb;\n    this.danceService = danceService;\n    this.route = route;\n    this.router = router;\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.categoryId = +this.route.snapshot.paramMap.get('id');\n    this.getCategory();\n  }\n  getCategory() {\n    this.danceService.getDanceCategoryById(this.categoryId).subscribe({\n      next: category => {\n        this.categoryForm.setValue({\n          name: category.name\n        });\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération de la catégorie', err);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.categoryForm.valid) {\n      const updatedCategory = this.categoryForm.value;\n      this.danceService.updateDanceCategory(this.categoryId, updatedCategory).subscribe({\n        next: () => {\n          this.router.navigate(['/category-list']);\n        },\n        error: err => {\n          console.error('Erreur lors de la mise à jour de la catégorie', err);\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function CategoryUpdateComponent_Factory(t) {\n      return new (t || CategoryUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DanceService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryUpdateComponent,\n      selectors: [[\"app-category-update\"]],\n      decls: 10,\n      vars: 1,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Nom de la cat\\u00E9gorie\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function CategoryUpdateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Mettre \\u00E0 jour la cat\\u00E9gorie\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CategoryUpdateComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Nom de la cat\\u00E9gorie\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵtext(9, \"Mettre \\u00E0 jour\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,uBAAuB;EAIlCC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,KAAqB,EACrBC,MAAc;IAHd,OAAE,GAAFH,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ;KAC/B,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAAC,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IAC1D,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACZ,YAAY,CAACa,oBAAoB,CAAC,IAAI,CAACL,UAAU,CAAC,CAACM,SAAS,CAAC;MAChEC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACb,YAAY,CAACc,QAAQ,CAAC;UAAEZ,IAAI,EAAEW,QAAQ,CAACX;QAAI,CAAE,CAAC;MACrD,CAAC;MACDa,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,gDAAgD,EAAEC,GAAG,CAAC;MACtE;KACD,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAAClB,YAAY,CAACmB,KAAK,EAAE;MAC3B,MAAMC,eAAe,GAAkB,IAAI,CAACpB,YAAY,CAACqB,KAAK;MAC9D,IAAI,CAACxB,YAAY,CAACyB,mBAAmB,CAAC,IAAI,CAACjB,UAAU,EAAEe,eAAe,CAAC,CAACT,SAAS,CAAC;QAChFC,IAAI,EAAE,MAAK;UACT,IAAI,CAACb,MAAM,CAACwB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC1C,CAAC;QACDR,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,+CAA+C,EAAEC,GAAG,CAAC;QACrE;OACD,CAAC;;EAEN;;;uBA3CWtB,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAA8B;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCbpCC,8BAAuB;UACfA,oDAA0B;UAAAA,iBAAK;UACnCA,+BAAyD;UAAxBA;YAAA,OAAYC,cAAU;UAAA,EAAC;UACtDD,8BAAwB;UACJA,wCAAmB;UAAAA,iBAAQ;UAC7CA,2BAAoH;UACtHA,iBAAM;UACNA,iCAA8C;UAAAA,kCAAa;UAAAA,iBAAS;;;UALhEA,eAA0B;UAA1BA,4CAA0B","names":["Validators","CategoryUpdateComponent","constructor","fb","danceService","route","router","categoryForm","group","name","required","ngOnInit","categoryId","snapshot","paramMap","get","getCategory","getDanceCategoryById","subscribe","next","category","setValue","error","err","console","onSubmit","valid","updatedCategory","value","updateDanceCategory","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-category\\category-update\\category-update.component.ts","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-category\\category-update\\category-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DanceCategory } from '../../../models/dance-category.model';\nimport { DanceService } from '../../../services/dance.service';\n\n\n@Component({\n  selector: 'app-category-update',\n  templateUrl: './category-update.component.html',\n  styleUrls: ['./category-update.component.css']\n})\nexport class CategoryUpdateComponent implements OnInit {\n  categoryForm: FormGroup;\n  categoryId!: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private danceService: DanceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.categoryId = +this.route.snapshot.paramMap.get('id')!;\n    this.getCategory();\n  }\n\n  getCategory() {\n    this.danceService.getDanceCategoryById(this.categoryId).subscribe({\n      next: (category) => {\n        this.categoryForm.setValue({ name: category.name });\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération de la catégorie', err);\n      }\n    });\n  }\n\n  onSubmit() {\n    if (this.categoryForm.valid) {\n      const updatedCategory: DanceCategory = this.categoryForm.value;\n      this.danceService.updateDanceCategory(this.categoryId, updatedCategory).subscribe({\n        next: () => {\n          this.router.navigate(['/category-list']);\n        },\n        error: (err) => {\n          console.error('Erreur lors de la mise à jour de la catégorie', err);\n        }\n      });\n    }\n  }\n}\n","<div class=\"container\">\n    <h2>Mettre à jour la catégorie</h2>\n    <form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nom de la catégorie</label>\n        <input id=\"name\" formControlName=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Nom de la catégorie\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Mettre à jour</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}