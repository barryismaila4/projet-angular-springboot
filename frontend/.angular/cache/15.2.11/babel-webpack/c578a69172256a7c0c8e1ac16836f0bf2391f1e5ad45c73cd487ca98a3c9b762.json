{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/dance.service\";\nimport * as i3 from \"@angular/router\";\nexport class CoursePostComponent {\n  constructor(fb, danceService, router) {\n    this.fb = fb;\n    this.danceService = danceService;\n    this.router = router;\n    this.courseForm = this.fb.group({\n      title: ['', Validators.required],\n      contenu: ['', Validators.required],\n      instructor: ['', Validators.required],\n      danceSchoolId: [null, Validators.required] // Assurez-vous d'avoir un champ pour l'école de danse\n    });\n  }\n\n  ngOnInit() {}\n  onSubmit() {\n    if (this.courseForm.valid) {\n      const newCourse = {\n        id: null,\n        title: this.courseForm.value.title,\n        contenu: this.courseForm.value.contenu,\n        instructor: this.courseForm.value.instructor,\n        danceSchool: {\n          id: this.courseForm.value.danceSchoolId\n        } // Associer l'école de danse\n      };\n\n      this.danceService.createCourse(newCourse).subscribe({\n        next: () => {\n          this.router.navigate(['crud/course-list']);\n        },\n        error: err => {\n          console.error('Erreur lors de la création du cours', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n  static {\n    this.ɵfac = function CoursePostComponent_Factory(t) {\n      return new (t || CoursePostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DanceService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CoursePostComponent,\n      selectors: [[\"app-course-post\"]],\n      decls: 2,\n      vars: 0,\n      template: function CoursePostComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"course-post works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAWnE,OAAM,MAAOC,mBAAmB;EAG9BC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MAClCE,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ,CAAC;MACrCG,aAAa,EAAE,CAAC,IAAI,EAAEZ,UAAU,CAACS,QAAQ,CAAC,CAAC;KAC5C,CAAC;EACJ;;EAEAI,QAAQ,IAAU;EAElBC,QAAQ;IACN,IAAI,IAAI,CAACR,UAAU,CAACS,KAAK,EAAE;MACzB,MAAMC,SAAS,GAAW;QACxBC,EAAE,EAAE,IAAI;QACRT,KAAK,EAAE,IAAI,CAACF,UAAU,CAACY,KAAK,CAACV,KAAK;QAClCE,OAAO,EAAE,IAAI,CAACJ,UAAU,CAACY,KAAK,CAACR,OAAO;QACtCC,UAAU,EAAE,IAAI,CAACL,UAAU,CAACY,KAAK,CAACP,UAAU;QAC5CQ,WAAW,EAAE;UAAEF,EAAE,EAAE,IAAI,CAACX,UAAU,CAACY,KAAK,CAACN;QAAa,CAAiB,CAAC;OACzE;;MAED,IAAI,CAACR,YAAY,CAACgB,YAAY,CAACJ,SAAS,CAAC,CAACK,SAAS,CAAC;QAClDC,IAAI,EAAE,MAAK;UACT,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAEC,GAAG,CAAC;QAC3D;OACD,CAAC;KACH,MAAM;MACLC,OAAO,CAACF,KAAK,CAAC,iCAAiC,CAAC;;EAEpD;;;uBAvCWvB,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAA0B;MAAAC;MAAAC;MAAAC;QAAA;UCZhCC,yBAAG;UAAAA,kCAAkB;UAAAA,iBAAI","names":["Validators","CoursePostComponent","constructor","fb","danceService","router","courseForm","group","title","required","contenu","instructor","danceSchoolId","ngOnInit","onSubmit","valid","newCourse","id","value","danceSchool","createCourse","subscribe","next","navigate","error","err","console","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-post\\course-post.component.ts","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-post\\course-post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Course } from '../../../models/course.model';\nimport { DanceSchool } from '../../../models/dance-school.model'; // Ajoutez cette ligne\nimport { DanceService } from '../../../services/dance.service';\n\n@Component({\n  selector: 'app-course-post',\n  templateUrl: './course-post.component.html',\n  styleUrls: ['./course-post.component.css']\n})\nexport class CoursePostComponent implements OnInit {\n  courseForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private danceService: DanceService,\n    private router: Router\n  ) {\n    this.courseForm = this.fb.group({\n      title: ['', Validators.required],\n      contenu: ['', Validators.required],\n      instructor: ['', Validators.required],\n      danceSchoolId: [null, Validators.required] // Assurez-vous d'avoir un champ pour l'école de danse\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.courseForm.valid) {\n      const newCourse: Course = {\n        id: null, // L'ID sera généré par le backend\n        title: this.courseForm.value.title,\n        contenu: this.courseForm.value.contenu,\n        instructor: this.courseForm.value.instructor,\n        danceSchool: { id: this.courseForm.value.danceSchoolId } as DanceSchool // Associer l'école de danse\n      };\n\n      this.danceService.createCourse(newCourse).subscribe({\n        next: () => {\n          this.router.navigate(['crud/course-list']);\n        },\n        error: (err) => {\n          console.error('Erreur lors de la création du cours', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n}","<p>course-post works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}