{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SchoolPostComponent = class SchoolPostComponent {\n  constructor(fb, danceService, router) {\n    this.fb = fb;\n    this.danceService = danceService;\n    this.router = router;\n    this.danceCategories = []; // Liste des catégories disponibles\n    this.schoolForm = this.fb.group({\n      name: ['', Validators.required],\n      localisation: ['', Validators.required],\n      openday: ['', Validators.required],\n      closeday: ['', Validators.required],\n      opentime: ['', Validators.required],\n      closetime: ['', Validators.required],\n      danceCategoryId: ['', Validators.required] // Champ pour la catégorie\n    });\n  }\n\n  ngOnInit() {\n    // Récupérer les catégories de danse disponibles\n    this.danceService.getAllDanceCategories().subscribe({\n      next: categories => {\n        this.danceCategories = categories;\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération des catégories', err);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.schoolForm.valid) {\n      const newSchool = this.schoolForm.value;\n      newSchool.danceCategoryId = this.selectedCategoryId; // Affecter la catégorie sélectionnée\n      this.danceService.createDanceSchool(newSchool).subscribe({\n        next: () => {\n          this.router.navigate(['crud/school-list']); // Rediriger vers la liste des écoles\n        },\n\n        error: err => {\n          console.error('Erreur lors de la création de l\\'école', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n};\nSchoolPostComponent = __decorate([Component({\n  selector: 'app-school-post',\n  templateUrl: './school-post.component.html',\n  styleUrls: ['./school-post.component.css']\n})], SchoolPostComponent);\nexport { SchoolPostComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IANhB,oBAAe,GAAoB,EAAE,CAAC,CAAE;IAQtC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,YAAY,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACvCE,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ,CAAC;MAClCG,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MACnCI,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MACnCK,SAAS,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MACpCM,eAAe,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACS,QAAQ,CAAC,CAAE;KAC7C,CAAC;EACJ;;EAEAO,QAAQ;IACN;IACA,IAAI,CAACZ,YAAY,CAACa,qBAAqB,EAAE,CAACC,SAAS,CAAC;MAClDC,IAAI,EAAGC,UAAU,IAAI;QACnB,IAAI,CAACC,eAAe,GAAGD,UAAU;MACnC,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,+CAA+C,EAAEC,GAAG,CAAC;MACrE;KACD,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACnB,UAAU,CAACoB,KAAK,EAAE;MACzB,MAAMC,SAAS,GAAgB,IAAI,CAACrB,UAAU,CAACsB,KAAK;MACpDD,SAAS,CAACZ,eAAe,GAAG,IAAI,CAACc,kBAAkB,CAAC,CAAE;MAEtD,IAAI,CAACzB,YAAY,CAAC0B,iBAAiB,CAACH,SAAS,CAAC,CAACT,SAAS,CAAC;QACvDC,IAAI,EAAE,MAAK;UACT,IAAI,CAACd,MAAM,CAAC0B,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAE;QAC/C,CAAC;;QACDT,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,wCAAwC,EAAEC,GAAG,CAAC;QAC9D;OACD,CAAC;KACH,MAAM;MACLC,OAAO,CAACF,KAAK,CAAC,iCAAiC,CAAC;;EAEpD;CACD;AAlDYrB,mBAAmB,eAL/BF,SAAS,CAAC;EACTiC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWjC,mBAAmB,CAkD/B;SAlDYA,mBAAmB","names":["Component","Validators","SchoolPostComponent","constructor","fb","danceService","router","schoolForm","group","name","required","localisation","openday","closeday","opentime","closetime","danceCategoryId","ngOnInit","getAllDanceCategories","subscribe","next","categories","danceCategories","error","err","console","onSubmit","valid","newSchool","value","selectedCategoryId","createDanceSchool","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-school\\school-post\\school-post.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-school-post',\n  templateUrl: './school-post.component.html',\n  styleUrls: ['./school-post.component.css']\n})\nexport class SchoolPostComponent implements OnInit {\n  schoolForm: FormGroup;\n  danceCategories: DanceCategory[] = [];  // Liste des catégories disponibles\n  selectedCategoryId!: number;  // ID de la catégorie sélectionnée\n\n  constructor(\n    private fb: FormBuilder,\n    private danceService: DanceService,\n    private router: Router\n  ) {\n    this.schoolForm = this.fb.group({\n      name: ['', Validators.required],\n      localisation: ['', Validators.required],\n      openday: ['', Validators.required],\n      closeday: ['', Validators.required],\n      opentime: ['', Validators.required],\n      closetime: ['', Validators.required],\n      danceCategoryId: ['', Validators.required]  // Champ pour la catégorie\n    });\n  }\n\n  ngOnInit(): void {\n    // Récupérer les catégories de danse disponibles\n    this.danceService.getAllDanceCategories().subscribe({\n      next: (categories) => {\n        this.danceCategories = categories;\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération des catégories', err);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.schoolForm.valid) {\n      const newSchool: DanceSchool = this.schoolForm.value;\n      newSchool.danceCategoryId = this.selectedCategoryId;  // Affecter la catégorie sélectionnée\n\n      this.danceService.createDanceSchool(newSchool).subscribe({\n        next: () => {\n          this.router.navigate(['crud/school-list']);  // Rediriger vers la liste des écoles\n        },\n        error: (err) => {\n          console.error('Erreur lors de la création de l\\'école', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}