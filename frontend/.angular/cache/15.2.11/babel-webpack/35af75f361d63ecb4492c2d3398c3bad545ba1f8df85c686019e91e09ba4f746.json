{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dance.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CategoryListComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CategoryListComponent_tr_13_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const category_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editCategory(category_r1.id));\n    });\n    i0.ɵɵtext(5, \"\\u00C9diter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CategoryListComponent_tr_13_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const category_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCategory(category_r1.id));\n    });\n    i0.ɵɵtext(7, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r1.name);\n  }\n}\nexport class CategoryListComponent {\n  constructor(danceService, router) {\n    this.danceService = danceService;\n    this.router = router;\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  getCategories() {\n    this.danceService.getAllDanceCategories().subscribe({\n      next: data => {\n        this.categories = data;\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération des catégories', err);\n      }\n    });\n  }\n  deleteCategory(id) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cette catégorie ?')) {\n      this.danceService.deleteDanceCategory(id).subscribe({\n        next: () => {\n          this.getCategories();\n        },\n        error: err => {\n          console.error('Erreur lors de la suppression de la catégorie', err);\n        }\n      });\n    }\n  }\n  editCategory(id) {\n    this.router.navigate([`crud/category-update/${id}`]);\n  }\n  // Méthode pour naviguer vers le formulaire de création de catégorie\n  goToCategoryPost() {\n    this.router.navigate(['crud/category-post']);\n  }\n  static {\n    this.ɵfac = function CategoryListComponent_Factory(t) {\n      return new (t || CategoryListComponent)(i0.ɵɵdirectiveInject(i1.DanceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryListComponent,\n      selectors: [[\"app-category-list\"]],\n      decls: 14,\n      vars: 1,\n      consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n      template: function CategoryListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Liste des cat\\u00E9gories\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function CategoryListComponent_Template_button_click_3_listener() {\n            return ctx.goToCategoryPost();\n          });\n          i0.ɵɵtext(4, \"Ajouter une cat\\u00E9gorie\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"table\", 2)(6, \"thead\")(7, \"tr\")(8, \"th\");\n          i0.ɵɵtext(9, \"Nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"tbody\");\n          i0.ɵɵtemplate(13, CategoryListComponent_tr_13_Template, 8, 1, \"tr\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        }\n      },\n      dependencies: [i3.NgForOf],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAcQA,0BAAwC;IAClCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IACMA;MAAA;MAAA;MAAA;MAAA,OAASA,kDAAyB;IAAA,EAAC;IAAyBA,2BAAM;IAAAA,iBAAS;IACnFA,iCAAqE;IAA7DA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAAwBA,yBAAS;IAAAA,iBAAS;;;;IAHrFA,eAAmB;IAAnBA,sCAAmB;;;ACLjC,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;IAF9D,eAAU,GAAoB,EAAE;EAEyC;EAEzEC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACH,YAAY,CAACI,qBAAqB,EAAE,CAACC,SAAS,CAAC;MAClDC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,UAAU,GAAGD,IAAI;MACxB,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,+CAA+C,EAAEC,GAAG,CAAC;MACrE;KACD,CAAC;EACJ;EAEAE,cAAc,CAACC,EAAU;IACvB,IAAIC,OAAO,CAAC,sDAAsD,CAAC,EAAE;MACnE,IAAI,CAACd,YAAY,CAACe,mBAAmB,CAACF,EAAE,CAAC,CAACR,SAAS,CAAC;QAClDC,IAAI,EAAE,MAAK;UACT,IAAI,CAACH,aAAa,EAAE;QACtB,CAAC;QACDM,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,+CAA+C,EAAEC,GAAG,CAAC;QACrE;OACD,CAAC;;EAEN;EAEAM,YAAY,CAACH,EAAU;IACrB,IAAI,CAACZ,MAAM,CAACgB,QAAQ,CAAC,CAAC,wBAAwBJ,EAAE,EAAE,CAAC,CAAC;EACtD;EAEA;EACAK,gBAAgB;IACd,IAAI,CAACjB,MAAM,CAACgB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;EAC9C;;;uBAxCWnB,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDVlC1B,8BAAuB;UACfA,yCAAoB;UAAAA,iBAAK;UAG7BA,iCAAkE;UAA1DA;YAAA,OAAS2B,sBAAkB;UAAA,EAAC;UAA8B3B,0CAAqB;UAAAA,iBAAS;UAEhGA,gCAAqB;UAGXA,mBAAG;UAAAA,iBAAK;UACZA,2BAAI;UAAAA,wBAAO;UAAAA,iBAAK;UAGpBA,8BAAO;UACLA,sEAMK;UACPA,iBAAQ;;;UAPmBA,gBAAa;UAAbA,wCAAa","names":["i0","CategoryListComponent","constructor","danceService","router","ngOnInit","getCategories","getAllDanceCategories","subscribe","next","data","categories","error","err","console","deleteCategory","id","confirm","deleteDanceCategory","editCategory","navigate","goToCategoryPost","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-category\\category-list\\category-list.component.html","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-category\\category-list\\category-list.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h2>Liste des catégories</h2>\n  \n    <!-- Bouton pour ajouter une nouvelle catégorie -->\n    <button (click)=\"goToCategoryPost()\" class=\"btn btn-primary mb-3\">Ajouter une catégorie</button>\n  \n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Nom</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let category of categories\">\n          <td>{{ category.name }}</td>\n          <td>\n            <button (click)=\"editCategory(category.id)\" class=\"btn btn-warning\">Éditer</button>\n            <button (click)=\"deleteCategory(category.id)\" class=\"btn btn-danger\">Supprimer</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DanceCategory } from '../../../models/dance-category.model';\nimport { DanceService } from '../../../services/dance.service';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\nexport class CategoryListComponent implements OnInit {\n  categories: DanceCategory[] = [];\n\n  constructor(private danceService: DanceService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.danceService.getAllDanceCategories().subscribe({\n      next: (data) => {\n        this.categories = data;\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération des catégories', err);\n      }\n    });\n  }\n\n  deleteCategory(id: number) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cette catégorie ?')) {\n      this.danceService.deleteDanceCategory(id).subscribe({\n        next: () => {\n          this.getCategories();\n        },\n        error: (err) => {\n          console.error('Erreur lors de la suppression de la catégorie', err);\n        }\n      });\n    }\n  }\n\n  editCategory(id: number) {\n    this.router.navigate([`crud/category-update/${id}`]);\n  }\n\n  // Méthode pour naviguer vers le formulaire de création de catégorie\n  goToCategoryPost() {\n    this.router.navigate(['crud/category-post']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}