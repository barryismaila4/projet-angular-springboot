{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/dance.service\";\nimport * as i3 from \"@angular/router\";\nexport class CategoryPostComponent {\n  constructor(fb, danceService, router) {\n    this.fb = fb;\n    this.danceService = danceService;\n    this.router = router;\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.categoryForm.valid) {\n      const category = this.categoryForm.value;\n      this.danceService.createDanceCategory(category).subscribe({\n        next: () => {\n          // Mise à jour de la navigation pour rediriger vers la bonne route\n          this.router.navigate(['crud/category-list']);\n        },\n        error: err => {\n          console.error('Erreur lors de l\\'ajout de la catégorie', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n  static {\n    this.ɵfac = function CategoryPostComponent_Factory(t) {\n      return new (t || CategoryPostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DanceService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryPostComponent,\n      selectors: [[\"app-category-post\"]],\n      decls: 10,\n      vars: 1,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Nom de la cat\\u00E9gorie\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function CategoryPostComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Ajouter une cat\\u00E9gorie de danse\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CategoryPostComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Nom de la cat\\u00E9gorie\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵtext(9, \"Ajouter\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,qBAAqB;EAGhCC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ;KAC/B,CAAC;EACJ;EAEAC,QAAQ,IAAU;EAElBC,QAAQ;IACN,IAAI,IAAI,CAACL,YAAY,CAACM,KAAK,EAAE;MAC3B,MAAMC,QAAQ,GAAkB,IAAI,CAACP,YAAY,CAACQ,KAAK;MACvD,IAAI,CAACV,YAAY,CAACW,mBAAmB,CAACF,QAAQ,CAAC,CAACG,SAAS,CAAC;QACxDC,IAAI,EAAE,MAAK;UACT;UACA,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;QAC9C,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,yCAAyC,EAAEC,GAAG,CAAC;QAC/D;OACD,CAAC;KACH,MAAM;MACLC,OAAO,CAACF,KAAK,CAAC,iCAAiC,CAAC;;EAEpD;;;uBA9BWlB,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCXlCC,8BAAuB;UACfA,mDAA8B;UAAAA,iBAAK;UACvCA,+BAAyD;UAAxBA;YAAA,OAAYC,cAAU;UAAA,EAAC;UACtDD,8BAAwB;UACJA,wCAAmB;UAAAA,iBAAQ;UAC7CA,2BAAoH;UACtHA,iBAAM;UACNA,iCAA8C;UAAAA,uBAAO;UAAAA,iBAAS;;;UAL1DA,eAA0B;UAA1BA,4CAA0B","names":["Validators","CategoryPostComponent","constructor","fb","danceService","router","categoryForm","group","name","required","ngOnInit","onSubmit","valid","category","value","createDanceCategory","subscribe","next","navigate","error","err","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-category\\category-post\\category-post.component.ts","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-category\\category-post\\category-post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DanceCategory } from '../../../models/dance-category.model';\nimport { DanceService } from '../../../services/dance.service';\n\n@Component({\n  selector: 'app-category-post',\n  templateUrl: './category-post.component.html',\n  styleUrls: ['./category-post.component.css']\n})\nexport class CategoryPostComponent implements OnInit {\n  categoryForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private danceService: DanceService,\n    private router: Router\n  ) {\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.categoryForm.valid) {\n      const category: DanceCategory = this.categoryForm.value;\n      this.danceService.createDanceCategory(category).subscribe({\n        next: () => {\n          // Mise à jour de la navigation pour rediriger vers la bonne route\n          this.router.navigate(['crud/category-list']);\n        },\n        error: (err) => {\n          console.error('Erreur lors de l\\'ajout de la catégorie', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }a\n}\n","<div class=\"container\">\n    <h2>Ajouter une catégorie de danse</h2>\n    <form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nom de la catégorie</label>\n        <input id=\"name\" formControlName=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Nom de la catégorie\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}