{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DanceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api'; // Remplacez par l'URL de votre API Spring Boot\n  }\n  // -------------------- DanceCategory CRUD --------------------\n  // Créer une DanceCategory\n  createDanceCategory(category) {\n    return this.http.post(`${this.apiUrl}/categories`, category);\n  }\n  // Obtenir toutes les DanceCategories\n  getAllDanceCategories() {\n    return this.http.get(`${this.apiUrl}/categories`);\n  }\n  // Obtenir une DanceCategory par ID\n  getDanceCategoryById(id) {\n    return this.http.get(`${this.apiUrl}/categories/${id}`);\n  }\n  // Mettre à jour une DanceCategory\n  updateDanceCategory(id, updatedCategory) {\n    return this.http.put(`${this.apiUrl}/categories/${id}`, updatedCategory);\n  }\n  // Supprimer une DanceCategory\n  deleteDanceCategory(id) {\n    return this.http.delete(`${this.apiUrl}/categories/${id}`);\n  }\n  // -------------------- DanceSchool CRUD --------------------\n  // Créer une DanceSchool\n  createDanceSchool(school) {\n    return this.http.post(`${this.apiUrl}/schools`, school);\n  }\n  // Obtenir toutes les DanceSchools\n  getAllDanceSchools() {\n    return this.http.get(`${this.apiUrl}/schools`);\n  }\n  // Obtenir une DanceSchool par ID\n  getDanceSchoolById(id) {\n    return this.http.get(`${this.apiUrl}/schools/${id}`);\n  }\n  // Mettre à jour une DanceSchool\n  updateDanceSchool(id, updatedSchool) {\n    return this.http.put(`${this.apiUrl}/schools/${id}`, updatedSchool);\n  }\n  // Supprimer une DanceSchool\n  deleteDanceSchool(id) {\n    return this.http.delete(`${this.apiUrl}/schools/${id}`);\n  }\n  // -------------------- Course CRUD --------------------\n  // Créer un Course\n  createCourse(course) {\n    return this.http.post(`${this.apiUrl}/courses`, course);\n  }\n  // Obtenir tous les Courses\n  getAllCourses() {\n    return this.http.get(`${this.apiUrl}/courses`);\n  }\n  // Obtenir un Course par ID\n  getCourseById(id) {\n    return this.http.get(`${this.apiUrl}/courses/${id}`);\n  }\n  // Mettre à jour un Course\n  updateCourse(id, updatedCourse) {\n    return this.http.put(`${this.apiUrl}/courses/${id}`, updatedCourse);\n  }\n  // Supprimer un Course\n  deleteCourse(id) {\n    return this.http.delete(`${this.apiUrl}/courses/${id}`);\n  }\n  static {\n    this.ɵfac = function DanceService_Factory(t) {\n      return new (t || DanceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DanceService,\n      factory: DanceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["DanceService","constructor","http","createDanceCategory","category","post","apiUrl","getAllDanceCategories","get","getDanceCategoryById","id","updateDanceCategory","updatedCategory","put","deleteDanceCategory","delete","createDanceSchool","school","getAllDanceSchools","getDanceSchoolById","updateDanceSchool","updatedSchool","deleteDanceSchool","createCourse","course","getAllCourses","getCourseById","updateCourse","updatedCourse","deleteCourse","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\services\\dance.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DanceCategory } from '../models/dance-category.model';\nimport { DanceSchool } from '../models/dance-school.model';\nimport { Course } from '../models/course.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DanceService {\n\n  private apiUrl = 'http://localhost:8080/api'; // Remplacez par l'URL de votre API Spring Boot\n\n  constructor(private http: HttpClient) { }\n\n  // -------------------- DanceCategory CRUD --------------------\n  \n  // Créer une DanceCategory\n  createDanceCategory(category: DanceCategory): Observable<DanceCategory> {\n    return this.http.post<DanceCategory>(`${this.apiUrl}/categories`, category);\n  }\n\n  // Obtenir toutes les DanceCategories\n  getAllDanceCategories(): Observable<DanceCategory[]> {\n    return this.http.get<DanceCategory[]>(`${this.apiUrl}/categories`);\n  }\n\n  // Obtenir une DanceCategory par ID\n  getDanceCategoryById(id: number): Observable<DanceCategory> {\n    return this.http.get<DanceCategory>(`${this.apiUrl}/categories/${id}`);\n  }\n\n  // Mettre à jour une DanceCategory\n  updateDanceCategory(id: number, updatedCategory: DanceCategory): Observable<DanceCategory> {\n    return this.http.put<DanceCategory>(`${this.apiUrl}/categories/${id}`, updatedCategory);\n  }\n\n  // Supprimer une DanceCategory\n  deleteDanceCategory(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/categories/${id}`);\n  }\n\n  // -------------------- DanceSchool CRUD --------------------\n  \n  // Créer une DanceSchool\n  createDanceSchool(school: DanceSchool): Observable<DanceSchool> {\n    return this.http.post<DanceSchool>(`${this.apiUrl}/schools`, school);\n  }\n\n  // Obtenir toutes les DanceSchools\n  getAllDanceSchools(): Observable<DanceSchool[]> {\n    return this.http.get<DanceSchool[]>(`${this.apiUrl}/schools`);\n  }\n\n  // Obtenir une DanceSchool par ID\n  getDanceSchoolById(id: number): Observable<DanceSchool> {\n    return this.http.get<DanceSchool>(`${this.apiUrl}/schools/${id}`);\n  }\n\n  // Mettre à jour une DanceSchool\n  updateDanceSchool(id: number, updatedSchool: DanceSchool): Observable<DanceSchool> {\n    return this.http.put<DanceSchool>(`${this.apiUrl}/schools/${id}`, updatedSchool);\n  }\n\n  // Supprimer une DanceSchool\n  deleteDanceSchool(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/schools/${id}`);\n  }\n\n  // -------------------- Course CRUD --------------------\n  \n  // Créer un Course\n  createCourse(course: Course): Observable<Course> {\n    return this.http.post<Course>(`${this.apiUrl}/courses`, course);\n  }\n\n  // Obtenir tous les Courses\n  getAllCourses(): Observable<Course[]> {\n    return this.http.get<Course[]>(`${this.apiUrl}/courses`);\n  }\n\n  // Obtenir un Course par ID\n  getCourseById(id: number): Observable<Course> {\n    return this.http.get<Course>(`${this.apiUrl}/courses/${id}`);\n  }\n\n  // Mettre à jour un Course\n  updateCourse(id: number, updatedCourse: Course): Observable<Course> {\n    return this.http.put<Course>(`${this.apiUrl}/courses/${id}`, updatedCourse);\n  }\n\n  // Supprimer un Course\n  deleteCourse(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/courses/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}