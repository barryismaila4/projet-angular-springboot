{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/dance.service\";\nimport * as i3 from \"@angular/router\";\nexport class SchoolUpdateComponent {\n  constructor(fb, danceService, router, route) {\n    this.fb = fb;\n    this.danceService = danceService;\n    this.router = router;\n    this.route = route;\n    this.schoolForm = this.fb.group({\n      name: ['', Validators.required],\n      localisation: ['', Validators.required],\n      openday: ['', Validators.required],\n      closeday: ['', Validators.required],\n      opentime: ['', Validators.required],\n      closetime: ['', Validators.required],\n      danceCategoryId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.schoolId = +this.route.snapshot.paramMap.get('id');\n    this.getSchool();\n  }\n  getSchool() {\n    this.danceService.getDanceSchoolById(this.schoolId).subscribe({\n      next: school => {\n        this.schoolForm.patchValue(school);\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération de l\\'école', err);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.schoolForm.valid) {\n      const updatedSchool = this.schoolForm.value;\n      this.danceService.updateDanceSchool(this.schoolId, updatedSchool).subscribe({\n        next: () => {\n          this.router.navigate(['crud/school-list']);\n        },\n        error: err => {\n          console.error('Erreur lors de la mise à jour de l\\'école', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n  static {\n    this.ɵfac = function SchoolUpdateComponent_Factory(t) {\n      return new (t || SchoolUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DanceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SchoolUpdateComponent,\n      selectors: [[\"app-school-update\"]],\n      decls: 2,\n      vars: 0,\n      template: function SchoolUpdateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"school-update works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,qBAAqB;EAIhCC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,MAAc,EACdC,KAAqB;IAHrB,OAAE,GAAFH,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IAEb,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAC/BC,YAAY,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MACvCE,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MAClCG,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,QAAQ,CAAC;MACnCI,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACU,QAAQ,CAAC;MACnCK,SAAS,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACU,QAAQ,CAAC;MACpCM,eAAe,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACU,QAAQ;KAC1C,CAAC;EACJ;EAEAO,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,CAAC,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACxD,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAAClB,YAAY,CAACmB,kBAAkB,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CAAC;MAC5DC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACnB,UAAU,CAACoB,UAAU,CAACD,MAAM,CAAC;MACpC,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,4CAA4C,EAAEC,GAAG,CAAC;MAClE;KACD,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACxB,UAAU,CAACyB,KAAK,EAAE;MACzB,MAAMC,aAAa,GAAgB,IAAI,CAAC1B,UAAU,CAAC2B,KAAK;MACxD,IAAI,CAAC9B,YAAY,CAAC+B,iBAAiB,CAAC,IAAI,CAACjB,QAAQ,EAAEe,aAAa,CAAC,CAACT,SAAS,CAAC;QAC1EC,IAAI,EAAE,MAAK;UACT,IAAI,CAACpB,MAAM,CAAC+B,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC;QACDR,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,2CAA2C,EAAEC,GAAG,CAAC;QACjE;OACD,CAAC;KACH,MAAM;MACLC,OAAO,CAACF,KAAK,CAAC,iCAAiC,CAAC;;EAEpD;;;uBAnDW3B,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAoC;MAAAC;MAAAC;MAAAC;QAAA;UCXlCC,yBAAG;UAAAA,oCAAoB;UAAAA,iBAAI","names":["Validators","SchoolUpdateComponent","constructor","fb","danceService","router","route","schoolForm","group","name","required","localisation","openday","closeday","opentime","closetime","danceCategoryId","ngOnInit","schoolId","snapshot","paramMap","get","getSchool","getDanceSchoolById","subscribe","next","school","patchValue","error","err","console","onSubmit","valid","updatedSchool","value","updateDanceSchool","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-school\\school-update\\school-update.component.ts","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\dance-school\\school-update\\school-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DanceSchool } from '../../../models/dance-school.model';\nimport { DanceService } from '../../../services/dance.service';\n\n@Component({\n  selector: 'app-school-update',\n  templateUrl: './school-update.component.html',\n  styleUrls: ['./school-update.component.css']\n})\nexport class SchoolUpdateComponent implements OnInit {\n  schoolForm: FormGroup;\n  schoolId: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private danceService: DanceService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.schoolForm = this.fb.group({\n      name: ['', Validators.required],\n      localisation: ['', Validators.required],\n      openday: ['', Validators.required],\n      closeday: ['', Validators.required],\n      opentime: ['', Validators.required],\n      closetime: ['', Validators.required],\n      danceCategoryId: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.schoolId = +this.route.snapshot.paramMap.get('id')!;\n    this.getSchool();\n  }\n\n  getSchool(): void {\n    this.danceService.getDanceSchoolById(this.schoolId).subscribe({\n      next: (school) => {\n        this.schoolForm.patchValue(school);\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération de l\\'école', err);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.schoolForm.valid) {\n      const updatedSchool: DanceSchool = this.schoolForm.value;\n      this.danceService.updateDanceSchool(this.schoolId, updatedSchool).subscribe({\n        next: () => {\n          this.router.navigate(['crud/school-list']);\n        },\n        error: (err) => {\n          console.error('Erreur lors de la mise à jour de l\\'école', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n}\n","<p>school-update works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}