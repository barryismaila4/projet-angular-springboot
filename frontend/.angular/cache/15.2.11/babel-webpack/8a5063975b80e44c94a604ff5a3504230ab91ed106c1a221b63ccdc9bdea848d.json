{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dance.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CourseListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CourseListComponent_tr_20_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editCourse(course_r1.id));\n    });\n    i0.ɵɵtext(11, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function CourseListComponent_tr_20_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCourse(course_r1.id));\n    });\n    i0.ɵɵtext(13, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.contenu);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.instructor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.danceSchool == null ? null : course_r1.danceSchool.name);\n  }\n}\nconst _c0 = function () {\n  return [\"/crud/course-post\"];\n};\nexport class CourseListComponent {\n  constructor(danceService, router) {\n    this.danceService = danceService;\n    this.router = router;\n    this.courses = []; // Liste des cours\n  }\n\n  ngOnInit() {\n    this.loadCourses();\n  }\n  // Charger la liste des cours\n  loadCourses() {\n    this.danceService.getAllCourses().subscribe({\n      next: data => {\n        this.courses = data;\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération des cours', err);\n      }\n    });\n  }\n  // Méthode pour modifier un cours\n  editCourse(courseId) {\n    this.router.navigate(['/crud/course-update', courseId]);\n  }\n  // Méthode pour supprimer un cours\n  deleteCourse(courseId) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce cours ?')) {\n      this.danceService.deleteCourse(courseId).subscribe({\n        next: () => {\n          alert('Cours supprimé avec succès.');\n          this.loadCourses(); // Recharger la liste des cours\n        },\n\n        error: err => {\n          console.error('Erreur lors de la suppression du cours', err);\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function CourseListComponent_Factory(t) {\n      return new (t || CourseListComponent)(i0.ɵɵdirectiveInject(i1.DanceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseListComponent,\n      selectors: [[\"app-course-list\"]],\n      decls: 21,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"mb-3\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n      template: function CourseListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Liste des cours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"a\", 2);\n          i0.ɵɵtext(5, \"Ajouter un cours\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"table\", 3)(7, \"thead\")(8, \"tr\")(9, \"th\");\n          i0.ɵɵtext(10, \"Titre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Contenu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Instructeur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\");\n          i0.ɵɵtext(16, \"\\u00C9cole de danse\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\");\n          i0.ɵɵtext(18, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(19, \"tbody\");\n          i0.ɵɵtemplate(20, CourseListComponent_tr_20_Template, 14, 4, \"tr\", 4);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        }\n      },\n      dependencies: [i3.NgForOf, i2.RouterLink],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAmBQA,0BAAmC;IAC7BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAA8B;IAAAA,iBAAK;IACvCA,0BAAI;IACqCA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAsB;IAAA,EAAC;IAACA,yBAAQ;IAAAA,iBAAS;IACzFA,kCAAyE;IAAnCA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAwB;IAAA,EAAC;IAACA,0BAAS;IAAAA,iBAAS;;;;IANzFA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAoB;IAApBA,uCAAoB;IACpBA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAA8B;IAA9BA,uFAA8B;;;;;;ACb5C,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;IAF9D,YAAO,GAAa,EAAE,CAAC,CAAC;EAEiD;;EAEzEC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEA;EACAA,WAAW;IACT,IAAI,CAACH,YAAY,CAACI,aAAa,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,OAAO,GAAGD,IAAI;MACrB,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,0CAA0C,EAAEC,GAAG,CAAC;MAChE;KACD,CAAC;EACJ;EAEA;EACAE,UAAU,CAACC,QAAgB;IACzB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,qBAAqB,EAAED,QAAQ,CAAC,CAAC;EACzD;EAEA;EACAE,YAAY,CAACF,QAAgB;IAC3B,IAAIG,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAC5D,IAAI,CAAChB,YAAY,CAACe,YAAY,CAACF,QAAQ,CAAC,CAACR,SAAS,CAAC;QACjDC,IAAI,EAAE,MAAK;UACTW,KAAK,CAAC,6BAA6B,CAAC;UACpC,IAAI,CAACd,WAAW,EAAE,CAAC,CAAC;QACtB,CAAC;;QACDM,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,wCAAwC,EAAEC,GAAG,CAAC;QAC9D;OACD,CAAC;;EAEN;;;uBAvCWZ,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAoB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDVhCzB,8BAAuB;UACfA,+BAAe;UAAAA,iBAAK;UAGxBA,8BAAkB;UACgDA,gCAAgB;UAAAA,iBAAI;UAGtFA,gCAAmC;UAGzBA,sBAAK;UAAAA,iBAAK;UACdA,2BAAI;UAAAA,wBAAO;UAAAA,iBAAK;UAChBA,2BAAI;UAAAA,4BAAW;UAAAA,iBAAK;UACpBA,2BAAI;UAAAA,oCAAc;UAAAA,iBAAK;UACvBA,2BAAI;UAAAA,wBAAO;UAAAA,iBAAK;UAGpBA,8BAAO;UACLA,qEASK;UACPA,iBAAQ;;;UAxBLA,eAAoC;UAApCA,uDAAoC;UAcdA,gBAAU;UAAVA,qCAAU","names":["i0","CourseListComponent","constructor","danceService","router","ngOnInit","loadCourses","getAllCourses","subscribe","next","data","courses","error","err","console","editCourse","courseId","navigate","deleteCourse","confirm","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-list\\course-list.component.html","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-list\\course-list.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h2>Liste des cours</h2>\n  \n    <!-- Bouton pour ajouter un cours -->\n    <div class=\"mb-3\">\n      <a [routerLink]=\"['/crud/course-post']\" class=\"btn btn-primary\">Ajouter un cours</a>\n    </div>\n  \n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Titre</th>\n          <th>Contenu</th>\n          <th>Instructeur</th>\n          <th>École de danse</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let course of courses\">\n          <td>{{ course.title }}</td>\n          <td>{{ course.contenu }}</td>\n          <td>{{ course.instructor }}</td>\n          <td>{{ course.danceSchool?.name }}</td>\n          <td>\n            <button class=\"btn btn-warning btn-sm\" (click)=\"editCourse(course.id!)\">Modifier</button>\n            <button class=\"btn btn-danger btn-sm\" (click)=\"deleteCourse(course.id!)\">Supprimer</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Course } from '../../../models/course.model';\nimport { DanceService } from '../../../services/dance.service';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})\nexport class CourseListComponent implements OnInit {\n  courses: Course[] = []; // Liste des cours\n\n  constructor(private danceService: DanceService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.loadCourses();\n  }\n\n  // Charger la liste des cours\n  loadCourses(): void {\n    this.danceService.getAllCourses().subscribe({\n      next: (data) => {\n        this.courses = data;\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération des cours', err);\n      }\n    });\n  }\n\n  // Méthode pour modifier un cours\n  editCourse(courseId: number): void {\n    this.router.navigate(['/crud/course-update', courseId]);\n  }\n\n  // Méthode pour supprimer un cours\n  deleteCourse(courseId: number): void {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce cours ?')) {\n      this.danceService.deleteCourse(courseId).subscribe({\n        next: () => {\n          alert('Cours supprimé avec succès.');\n          this.loadCourses(); // Recharger la liste des cours\n        },\n        error: (err) => {\n          console.error('Erreur lors de la suppression du cours', err);\n        }\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}