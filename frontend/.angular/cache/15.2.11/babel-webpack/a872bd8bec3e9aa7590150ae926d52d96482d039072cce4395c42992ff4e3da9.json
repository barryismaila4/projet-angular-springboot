{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/dance.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CoursePostComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 14);\n    i0.ɵɵtext(2, \"Le titre est requis.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CoursePostComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 14);\n    i0.ɵɵtext(2, \"Le contenu est requis.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CoursePostComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 14);\n    i0.ɵɵtext(2, \"Le nom de l'instructeur est requis.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CoursePostComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const school_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", school_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", school_r5.name, \" \");\n  }\n}\nfunction CoursePostComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 14);\n    i0.ɵɵtext(2, \"Veuillez s\\u00E9lectionner une \\u00E9cole de danse.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CoursePostComponent {\n  constructor(fb, danceService, router) {\n    this.fb = fb;\n    this.danceService = danceService;\n    this.router = router;\n    this.danceSchools = []; // Liste des écoles de danse\n    this.courseForm = this.fb.group({\n      title: ['', Validators.required],\n      contenu: ['', Validators.required],\n      instructor: ['', Validators.required],\n      danceSchoolId: [null, Validators.required] // Champ pour l'école de danse\n    });\n  }\n\n  ngOnInit() {\n    this.loadDanceSchools(); // Charger les écoles de danse disponibles\n  }\n\n  loadDanceSchools() {\n    this.danceService.getAllDanceSchools().subscribe({\n      next: data => {\n        this.danceSchools = data; // Remplir la liste des écoles de danse\n      },\n\n      error: err => {\n        console.error('Erreur lors de la récupération des écoles de danse', err);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.courseForm.valid) {\n      const newCourse = {\n        id: null,\n        title: this.courseForm.value.title,\n        contenu: this.courseForm.value.contenu,\n        instructor: this.courseForm.value.instructor,\n        danceSchool: {\n          id: this.courseForm.value.danceSchoolId\n        } // Associer l'école de danse\n      };\n\n      this.danceService.createCourse(newCourse).subscribe({\n        next: () => {\n          this.router.navigate(['crud/course-list']); // Redirection vers la liste des cours\n        },\n\n        error: err => {\n          console.error('Erreur lors de la création du cours', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n  returnToCourseList() {\n    this.router.navigate(['crud/course-list']);\n  }\n  static {\n    this.ɵfac = function CoursePostComponent_Factory(t) {\n      return new (t || CoursePostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DanceService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CoursePostComponent,\n      selectors: [[\"app-course-post\"]],\n      decls: 28,\n      vars: 8,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"id\", \"title\", \"formControlName\", \"title\"], [4, \"ngIf\"], [\"for\", \"contenu\"], [\"id\", \"contenu\", \"formControlName\", \"contenu\"], [\"for\", \"instructor\"], [\"id\", \"instructor\", \"formControlName\", \"instructor\"], [\"for\", \"danceSchoolId\"], [\"id\", \"danceSchoolId\", \"formControlName\", \"danceSchoolId\"], [\"disabled\", \"\", \"selected\", \"\", 3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"error\"], [3, \"value\"]],\n      template: function CoursePostComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function CoursePostComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n          i0.ɵɵtext(3, \"Titre du cours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 2);\n          i0.ɵɵtemplate(5, CoursePostComponent_div_5_Template, 3, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n          i0.ɵɵtext(8, \"Contenu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"textarea\", 5);\n          i0.ɵɵtemplate(10, CoursePostComponent_div_10_Template, 3, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\", 6);\n          i0.ɵɵtext(13, \"Instructeur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 7);\n          i0.ɵɵtemplate(15, CoursePostComponent_div_15_Template, 3, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\")(17, \"label\", 8);\n          i0.ɵɵtext(18, \"\\u00C9cole de danse\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 9)(20, \"option\", 10);\n          i0.ɵɵtext(21, \"Choisir une \\u00E9cole\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, CoursePostComponent_option_22_Template, 2, 2, \"option\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(23, CoursePostComponent_div_23_Template, 3, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"button\", 12);\n          i0.ɵɵtext(25, \"Cr\\u00E9er le cours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function CoursePostComponent_Template_button_click_26_listener() {\n            return ctx.returnToCourseList();\n          });\n          i0.ɵɵtext(27, \"Retour \\u00E0 la liste des cours\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_6_0;\n          i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.courseForm.get(\"title\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.courseForm.get(\"title\")) == null ? null : tmp_1_0.touched) || ((tmp_1_0 = ctx.courseForm.get(\"title\")) == null ? null : tmp_1_0.dirty)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.courseForm.get(\"contenu\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.courseForm.get(\"contenu\")) == null ? null : tmp_2_0.touched) || ((tmp_2_0 = ctx.courseForm.get(\"contenu\")) == null ? null : tmp_2_0.dirty)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.courseForm.get(\"instructor\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.courseForm.get(\"instructor\")) == null ? null : tmp_3_0.touched) || ((tmp_3_0 = ctx.courseForm.get(\"instructor\")) == null ? null : tmp_3_0.dirty)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"value\", null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.danceSchools);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.courseForm.get(\"danceSchoolId\")) == null ? null : tmp_6_0.invalid) && (((tmp_6_0 = ctx.courseForm.get(\"danceSchoolId\")) == null ? null : tmp_6_0.touched) || ((tmp_6_0 = ctx.courseForm.get(\"danceSchoolId\")) == null ? null : tmp_6_0.dirty)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.courseForm.invalid);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","CoursePostComponent","constructor","fb","danceService","router","courseForm","group","title","required","contenu","instructor","danceSchoolId","ngOnInit","loadDanceSchools","getAllDanceSchools","subscribe","next","data","danceSchools","error","err","console","onSubmit","valid","newCourse","id","value","danceSchool","createCourse","navigate","returnToCourseList","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-post\\course-post.component.ts","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-post\\course-post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Course } from '../../../models/course.model';\nimport { DanceSchool } from '../../../models/dance-school.model'; // Assurez-vous que le chemin est correct\nimport { DanceService } from '../../../services/dance.service';\n\n@Component({\n  selector: 'app-course-post',\n  templateUrl: './course-post.component.html',\n  styleUrls: ['./course-post.component.css']\n})\nexport class CoursePostComponent implements OnInit {\n  courseForm: FormGroup;\n  danceSchools: DanceSchool[] = []; // Liste des écoles de danse\n\n  constructor(\n    private fb: FormBuilder,\n    private danceService: DanceService,\n    private router: Router\n  ) {\n    this.courseForm = this.fb.group({\n      title: ['', Validators.required],\n      contenu: ['', Validators.required],\n      instructor: ['', Validators.required],\n      danceSchoolId: [null, Validators.required] // Champ pour l'école de danse\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadDanceSchools(); // Charger les écoles de danse disponibles\n  }\n\n  loadDanceSchools(): void {\n    this.danceService.getAllDanceSchools().subscribe({\n      next: (data) => {\n        this.danceSchools = data; // Remplir la liste des écoles de danse\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération des écoles de danse', err);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.courseForm.valid) {\n      const newCourse: Course = {\n        id: null, // L'ID sera généré par le backend\n        title: this.courseForm.value.title,\n        contenu: this.courseForm.value.contenu,\n        instructor: this.courseForm.value.instructor,\n        danceSchool: { id: this.courseForm.value.danceSchoolId } as DanceSchool // Associer l'école de danse\n      };\n\n      this.danceService.createCourse(newCourse).subscribe({\n        next: () => {\n          this.router.navigate(['crud/course-list']); // Redirection vers la liste des cours\n        },\n        error: (err) => {\n          console.error('Erreur lors de la création du cours', err);\n        }\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide');\n    }\n  }\n  returnToCourseList(): void {\n    this.router.navigate(['crud/course-list']);\n  }\n  \n}","<form [formGroup]=\"courseForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"title\">Titre du cours</label>\n      <input id=\"title\" formControlName=\"title\" />\n      <div *ngIf=\"courseForm.get('title')?.invalid && (courseForm.get('title')?.touched || courseForm.get('title')?.dirty)\">\n        <small class=\"error\">Le titre est requis.</small>\n      </div>\n    </div>\n  \n    <div>\n      <label for=\"contenu\">Contenu</label>\n      <textarea id=\"contenu\" formControlName=\"contenu\"></textarea>\n      <div *ngIf=\"courseForm.get('contenu')?.invalid && (courseForm.get('contenu')?.touched || courseForm.get('contenu')?.dirty)\">\n        <small class=\"error\">Le contenu est requis.</small>\n      </div>\n    </div>\n  \n    <div>\n      <label for=\"instructor\">Instructeur</label>\n      <input id=\"instructor\" formControlName=\"instructor\" />\n      <div *ngIf=\"courseForm.get('instructor')?.invalid && (courseForm.get('instructor')?.touched || courseForm.get('instructor')?.dirty)\">\n        <small class=\"error\">Le nom de l'instructeur est requis.</small>\n      </div>\n    </div>\n  \n    <div>\n      <label for=\"danceSchoolId\">École de danse</label>\n      <select id=\"danceSchoolId\" formControlName=\"danceSchoolId\">\n        <option [value]=\"null\" disabled selected>Choisir une école</option>\n        <!-- Remplissez cette liste avec les écoles de danse disponibles -->\n        <option *ngFor=\"let school of danceSchools\" [value]=\"school.id\">\n          {{ school.name }}\n        </option>\n      </select>\n      <div *ngIf=\"courseForm.get('danceSchoolId')?.invalid && (courseForm.get('danceSchoolId')?.touched || courseForm.get('danceSchoolId')?.dirty)\">\n        <small class=\"error\">Veuillez sélectionner une école de danse.</small>\n      </div>\n    </div>\n  \n    <button type=\"submit\" [disabled]=\"courseForm.invalid\">Créer le cours</button>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"returnToCourseList()\">Retour à la liste des cours</button>\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}