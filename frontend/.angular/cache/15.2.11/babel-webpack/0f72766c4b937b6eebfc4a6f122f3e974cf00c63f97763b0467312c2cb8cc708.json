{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dance.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction CourseListComponent_tr_16_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CourseListComponent_tr_16_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const course_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteCourse(course_r1.id));\n    });\n    i0.ɵɵtext(1, \"Supprimer\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/crud/course-update\", a1];\n};\nfunction CourseListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, CourseListComponent_tr_16_button_10_Template, 2, 0, \"button\", 1);\n    i0.ɵɵelementStart(11, \"a\", 2);\n    i0.ɵɵtext(12, \"\\u00C9diter\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.contenu);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.instructor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getDanceSchoolName(course_r1.danceSchool.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", course_r1.id !== null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, course_r1.id));\n  }\n}\nexport class CourseListComponent {\n  constructor(danceService) {\n    this.danceService = danceService;\n    this.courses = [];\n  }\n  ngOnInit() {\n    this.loadCourses();\n  }\n  loadCourses() {\n    this.danceService.getAllCourses().subscribe(data => {\n      this.courses = data;\n    }, error => {\n      console.error('Erreur lors du chargement des cours', error);\n    });\n  }\n  deleteCourse(id) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce cours ?')) {\n      this.danceService.deleteCourse(id).subscribe(() => {\n        this.loadCourses(); // Recharge la liste après la suppression\n      }, error => {\n        console.error('Erreur lors de la suppression du cours', error);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function CourseListComponent_Factory(t) {\n      return new (t || CourseListComponent)(i0.ɵɵdirectiveInject(i1.DanceService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseListComponent,\n      selectors: [[\"app-course-list\"]],\n      decls: 17,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngIf\"], [3, \"routerLink\"], [3, \"click\"]],\n      template: function CourseListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Liste des Cours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n          i0.ɵɵtext(6, \"Titre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\");\n          i0.ɵɵtext(8, \"Contenu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Instructeur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"\\u00C9cole de Danse\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tbody\");\n          i0.ɵɵtemplate(16, CourseListComponent_tr_16_Template, 13, 8, \"tr\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAkBQA,iCAAqE;IAAlCA;MAAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAACA,yBAAS;IAAAA,iBAAS;;;;;;;;IAN3FA,0BAAmC;IAC7BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAA+C;IAAAA,iBAAK;IACxDA,0BAAI;IACFA,kFAAuF;IACvFA,6BAAqD;IAAAA,4BAAM;IAAAA,iBAAI;;;;;IAN7DA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAoB;IAApBA,uCAAoB;IACpBA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAA+C;IAA/CA,yEAA+C;IAExCA,eAAwB;IAAxBA,4CAAwB;IAC9BA,eAAiD;IAAjDA,qEAAiD;;;ACR5D,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFhC,YAAO,GAAa,EAAE;EAE2B;EAEjDC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACF,YAAY,CAACG,aAAa,EAAE,CAACC,SAAS,CACxCC,IAAI,IAAI;MACP,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CACF;EACH;EAEAE,YAAY,CAACC,EAAU;IACrB,IAAIC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAC5D,IAAI,CAACX,YAAY,CAACS,YAAY,CAACC,EAAE,CAAC,CAACN,SAAS,CAC1C,MAAK;QACH,IAAI,CAACF,WAAW,EAAE,CAAC,CAAC;MACtB,CAAC,EACAK,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CACF;;EAEL;;;uBA/BWT,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAc;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDXhCnB,0BAAI;UAAAA,+BAAe;UAAAA,iBAAK;UACxBA,6BAAO;UAGGA,qBAAK;UAAAA,iBAAK;UACdA,0BAAI;UAAAA,uBAAO;UAAAA,iBAAK;UAChBA,0BAAI;UAAAA,4BAAW;UAAAA,iBAAK;UACpBA,2BAAI;UAAAA,oCAAc;UAAAA,iBAAK;UACvBA,2BAAI;UAAAA,wBAAO;UAAAA,iBAAK;UAGpBA,8BAAO;UACLA,qEASK;UACPA,iBAAQ;;;UAViBA,gBAAU;UAAVA,qCAAU","names":["i0","CourseListComponent","constructor","danceService","ngOnInit","loadCourses","getAllCourses","subscribe","data","courses","error","console","deleteCourse","id","confirm","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-list\\course-list.component.html","C:\\Users\\htismaila4\\Desktop\\Spring-Angular\\dancefrontend\\src\\app\\src\\app\\backofficecrud\\course\\course-list\\course-list.component.ts"],"sourcesContent":["<h2>Liste des Cours</h2>\n<table>\n  <thead>\n    <tr>\n      <th>Titre</th>\n      <th>Contenu</th>\n      <th>Instructeur</th>\n      <th>École de Danse</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let course of courses\">\n      <td>{{ course.title }}</td>\n      <td>{{ course.contenu }}</td>\n      <td>{{ course.instructor }}</td>\n      <td>{{ getDanceSchoolName(course.danceSchool.id) }}</td>\n      <td>\n        <button *ngIf=\"course.id !== null\" (click)=\"deleteCourse(course.id)\">Supprimer</button>\n        <a [routerLink]=\"['/crud/course-update', course.id]\">Éditer</a>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { Course } from '../../../models/course.model';\nimport { DanceService } from '../../../services/dance.service';\nimport { DanceSchool } from '../../../models/dance-school.model';\n\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})\nexport class CourseListComponent implements OnInit {\n  courses: Course[] = [];\n\n  constructor(private danceService: DanceService) {}\n\n  ngOnInit(): void {\n    this.loadCourses();\n  }\n\n  loadCourses(): void {\n    this.danceService.getAllCourses().subscribe(\n      (data) => {\n        this.courses = data;\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des cours', error);\n      }\n    );\n  }\n\n  deleteCourse(id: number): void {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce cours ?')) {\n      this.danceService.deleteCourse(id).subscribe(\n        () => {\n          this.loadCourses(); // Recharge la liste après la suppression\n        },\n        (error) => {\n          console.error('Erreur lors de la suppression du cours', error);\n        }\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}